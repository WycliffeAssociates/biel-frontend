---
import {getLanguagesWithContentForBiel} from "@src/data/pubDataApi";
import type {i18nDictType} from "@src/i18n/strings";
import {ResourceIndex} from "./Main";
interface Props {
  detailPrefix: string;
  i18nDict: i18nDictType;
}
const startTime = performance.now();
const runtime = Astro.locals.runtime;
const queryParams = Astro.url.searchParams;
const doBustCache = !!queryParams.get("cache-bust");
// note, cache is a noop in dev right now for cloudfalre adapter
const cache = runtime.caches.default;
const ctx = runtime.ctx;
const pubDataApiUrl = runtime.env.PUBLIC_DATA_API;
const {detailPrefix, i18nDict} = Astro.props;
const {data, wasCached} = await getLanguagesWithContentForBiel({
  cache,
  ctx,
  pubDataApiUrl,
  doBustCache,
});
if (!data) return Astro.redirect("/404");
const endTime = performance.now();
const totalTime = endTime - startTime;
console.log(
  `time for resources index route on server ${totalTime} ms.
  Was cached: ${wasCached}. `
);
---

<div class="contain px-4">
  <ResourceIndex
    client:load
    i18nDict={i18nDict}
    languages={data.data.language}
    detailPrefix={detailPrefix}
  />
</div>
<!-- <slot /> -->
<!--  children with the `slot="after-header"` attribute will go here -->
<!-- </ResourceIndex> -->
